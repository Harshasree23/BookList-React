/* Entire Page CSS */
.list {
    width: 90vw;
    height: 100%;
    background-color: #daddd883;
    box-shadow: 0px 0px 20px;
}


/* Heading for Container */
.book-list-heading{
    border: 2px solid gray;
    border-bottom: none;
    background-color: #ffffffce;
    margin: auto auto;
    display: flex;
    height: 15vh;
}

.book-list-title{
    display: flex;
    justify-items: center;
    align-items: center;
}

.book-list-search{
    margin-left: 20vw;
    display: flex;
    justify-items: center;
    align-items: center;
}

.list h2{
    font-size: 6vh;
    display: inline-block;
    margin-left: 50px;
    font-weight: normal;
}

.book-icon{
    margin-left: 20px;
    height: 50px;
    filter: grayscale(10);
    width: auto;
}

.search-icon{
    height: 30px;
    margin-right: 15px;
    width: auto;
}

.input_search{
    display: inline-block;
    border: none;
    background-color: rgb(255, 255, 255);
    box-shadow: 0px 0px 10px rgb(153, 151, 151);
    padding: 10px;
    font-weight: normal;
    font-size: 20px;
    height: 50px;
    width: 350px;
}

.input_search:focus{
    outline: none;
    box-shadow: 0px 0px 10px rgb(253, 198, 45);
    border: 2px solid rgb(253, 198, 45);
}
    



/* Contents CSS */
.booknames , .not-found , .spinner-container{
    padding: 30px;
    
    border: 3px solid gray;
    display: grid;
    grid-template-columns: auto auto auto auto ;
    gap: 60px; 
    list-style: none;
    width: auto;
    height: 100%;
    min-height: 60vh;
    overflow: auto;
}

.book {
    display: flex;
    font-family: 'Urbanist', sans-serif;
    background-image: url('./utilities/shattered-Photoroom.png');
    background-size: cover;
    text-decoration: none;
    width: 200px; /* Set width of each book */
    height: 300px;
    padding: 15px;
    font-size: 4vh;
    color: #3b1b04;
    border: 1px solid #1c1c1c;
    border-left: .5vw solid rgb(83, 57, 0);
    background-color: rgb(255, 255, 255);
    box-shadow: 10px 10px 15px rgba(102, 102, 102, 0.671);
}

.book:hover {
    background-color: rgb(80, 80, 80);
    border-left: 1vw solid rgb(83, 57, 0);
    box-shadow: 25px 25px 15px rgba(153, 152, 152, 0.692);
    font-weight: bold;
    color: #3b1b04;
}


.not-found{
    display: flex;
    align-items: center ;
    justify-content: center;
    font-weight: bold;
    font-size: 4vh;
}

.not-found img{
    height: 5vh;
    width: auto;
}


/* for loading */
.spinner {
    margin: 20vh 45vw;
    position: absolute;
    width: 9px;
    height: 9px;
  }
  
  .spinner div {
    position: absolute;
    width: 50%;
    height: 150%;
    background: #000000;
    transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1%));
    animation: spinner-fzua35 1s calc(var(--delay) * 1s) infinite ease;
  }
  
  .spinner div:nth-child(1) {
    --delay: 0.1;
    --rotation: 36;
    --translation: 150;
  }
  
  .spinner div:nth-child(2) {
    --delay: 0.2;
    --rotation: 72;
    --translation: 150;
  }
  
  .spinner div:nth-child(3) {
    --delay: 0.3;
    --rotation: 108;
    --translation: 150;
  }
  
  .spinner div:nth-child(4) {
    --delay: 0.4;
    --rotation: 144;
    --translation: 150;
  }
  
  .spinner div:nth-child(5) {
    --delay: 0.5;
    --rotation: 180;
    --translation: 150;
  }
  
  .spinner div:nth-child(6) {
    --delay: 0.6;
    --rotation: 216;
    --translation: 150;
  }
  
  .spinner div:nth-child(7) {
    --delay: 0.7;
    --rotation: 252;
    --translation: 150;
  }
  
  .spinner div:nth-child(8) {
    --delay: 0.8;
    --rotation: 288;
    --translation: 150;
  }
  
  .spinner div:nth-child(9) {
    --delay: 0.9;
    --rotation: 324;
    --translation: 150;
  }
  
  .spinner div:nth-child(10) {
    --delay: 1;
    --rotation: 360;
    --translation: 150;
  }
  
  @keyframes spinner-fzua35 {
    0%, 10%, 20%, 30%, 50%, 60%, 70%, 80%, 90%, 100% {
      transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1%));
    }
  
    50% {
      transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1.5%));
    }
  }